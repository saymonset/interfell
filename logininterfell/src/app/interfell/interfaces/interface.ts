export interface booking {
  bookingFields?: string;
  bookingChecklistData?: string;
  bookingDurationTime?: number;
  recurrentWeeks?: number;
  tutenUserProfessionalRole?: TutenUserProfessionalRole;
  bookingStatusTime?: number;
  bookingCreatedTime?: number;
  tutenUserProfessional?: TutenUserProfessional;
  bookingTime?: number;
  bookingId?: number;
  bookingState?: number;
  bookingPrice?: number;
  locationId?: LocationId;
  paymentId?: PaymentId;
  tutenUserClient?: TutenUserClient;
  score?: number;
  details?: string;
  comments?: any;
  commentsPro?: any;
  commentsClient?: any;
  cost?: number;
  paid?: number;
  professionalPrice?: number;
  professionalBonus?: number;
  bookingInitiateTime?: number;
  bookingFinishTime?: number;
  stateExtraData?: any;
  proPaid?: any;
  formPaid?: any;
  to?: any;
  paymentResult?: string;
  recurrency?: Recurrency;
  parentBooking?: ParentBooking3;
  assignedProEmailSent?: boolean;
  bookingInitMatch?: number;
  bookingSubState?: any;
  proPayment?: any;
  nullifyResult?: any;
  listPrice?: any;
  childSubState?: any;
  nextChildCreationAttempt?: any;
  mapHash?: any;
  formData?: any;
  textTasks?: any;
  arrivalDate?: any;
  uninitiatedPushSent?: any;
  couponDiscount?: any;
  coupon?: any;
  namespace?: any;
  bookingDomain?: any;
  token?: string;
  frameworkId?: any;
  domain?: string;
  selectedRecurrency?: any;
  seenProDate?: any;
  lastChildBooking?: any;
  calcPrice?: any;
  calcProPrice?: any;
  suppliesCost?: any;
  kilometers?: any;
  salesChannel?: any;
  bookingOnDemand?: boolean;
  quotationState?: number;
  tags?: any[];
  attachment?: any;
  caseId?: any;
  bookingAceptedAt?: any;
}

export  interface ParentBooking3 {
  bookingFields?: string;
  bookingChecklistData?: any;
  bookingDurationTime?: number;
  recurrentWeeks?: any;
  tutenUserProfessionalRole?: TutenUserProfessionalRole;
  bookingStatusTime?: number;
  bookingCreatedTime?: number;
  tutenUserProfessional?: TutenUserProfessional2;
  bookingTime?: number;
  bookingId?: number;
  bookingState?: number;
  bookingPrice?: number;
  locationId?: LocationId2;
  paymentId?: PaymentId;
  tutenUserClient?: TutenUserClient2;
  score?: number;
  details?: string;
  comments?: any;
  commentsPro?: any;
  commentsClient?: any;
  cost?: number;
  paid?: number;
  professionalPrice?: number;
  professionalBonus?: number;
  bookingInitiateTime?: number;
  bookingFinishTime?: number;
  stateExtraData?: any;
  proPaid?: any;
  formPaid?: any;
  to?: any;
  paymentResult?: string;
  recurrency?: Recurrency;
  parentBooking?: ParentBooking2;
  assignedProEmailSent?: boolean;
  bookingInitMatch?: number;
  bookingSubState?: any;
  proPayment?: any;
  nullifyResult?: any;
  listPrice?: any;
  childSubState?: any;
  nextChildCreationAttempt?: any;
  mapHash?: any;
  formData?: any;
  textTasks?: any;
  arrivalDate?: any;
  uninitiatedPushSent?: any;
  couponDiscount?: any;
  coupon?: any;
  namespace?: any;
  bookingDomain?: any;
  token?: string;
  frameworkId?: any;
  domain?: string;
  selectedRecurrency?: any;
  seenProDate?: any;
  lastChildBooking?: any;
  calcPrice?: any;
  calcProPrice?: any;
  suppliesCost?: any;
  kilometers?: any;
  salesChannel?: any;
  bookingOnDemand?: boolean;
  quotationState?: number;
  tags?: any[];
  attachment?: any;
  caseId?: any;
  bookingAceptedAt?: any;
}

export  interface ParentBooking2 {
  bookingFields?: string;
  bookingChecklistData?: string;
  bookingDurationTime?: number;
  recurrentWeeks?: any;
  tutenUserProfessionalRole?: TutenUserProfessionalRole;
  bookingStatusTime?: number;
  bookingCreatedTime?: number;
  tutenUserProfessional?: TutenUserProfessional3;
  bookingTime?: number;
  bookingId?: number;
  bookingState?: number;
  bookingPrice?: number;
  locationId?: LocationId2;
  paymentId?: PaymentId;
  tutenUserClient?: TutenUserClient2;
  score?: number;
  details?: string;
  comments?: any;
  commentsPro?: any;
  commentsClient?: any;
  cost?: number;
  paid?: number;
  professionalPrice?: number;
  professionalBonus?: number;
  bookingInitiateTime?: number;
  bookingFinishTime?: number;
  stateExtraData?: any;
  proPaid?: any;
  formPaid?: any;
  to?: any;
  paymentResult?: string;
  recurrency?: Recurrency;
  parentBooking?: ParentBooking;
  assignedProEmailSent?: boolean;
  bookingInitMatch?: number;
  bookingSubState?: any;
  proPayment?: any;
  nullifyResult?: any;
  listPrice?: any;
  childSubState?: any;
  nextChildCreationAttempt?: any;
  mapHash?: any;
  formData?: any;
  textTasks?: any;
  arrivalDate?: any;
  uninitiatedPushSent?: any;
  couponDiscount?: any;
  coupon?: any;
  namespace?: any;
  bookingDomain?: any;
  token?: string;
  frameworkId?: any;
  domain?: string;
  selectedRecurrency?: any;
  seenProDate?: number;
  lastChildBooking?: any;
  calcPrice?: any;
  calcProPrice?: any;
  suppliesCost?: any;
  kilometers?: any;
  salesChannel?: any;
  bookingOnDemand?: boolean;
  quotationState?: number;
  tags?: Tag[];
  attachment?: any;
  caseId?: any;
  bookingAceptedAt?: any;
}

export  interface ParentBooking {
  bookingFields?: string;
  bookingChecklistData?: string;
  bookingDurationTime?: number;
  recurrentWeeks?: number;
  tutenUserProfessionalRole?: TutenUserProfessionalRole;
  bookingStatusTime?: number;
  bookingCreatedTime?: number;
  tutenUserProfessional?: TutenUserProfessional4;
  bookingTime?: number;
  bookingId?: number;
  bookingState?: number;
  bookingPrice?: number;
  locationId?: LocationId2;
  paymentId?: PaymentId;
  tutenUserClient?: TutenUser2;
  score?: number;
  details?: string;
  comments?: any;
  commentsPro?: any;
  commentsClient?: any;
  cost?: number;
  paid?: number;
  professionalPrice?: number;
  professionalBonus?: number;
  bookingInitiateTime?: number;
  bookingFinishTime?: number;
  stateExtraData?: any;
  proPaid?: any;
  formPaid?: any;
  to?: any;
  paymentResult?: string;
  recurrency?: Recurrency;
  parentBooking?: any;
  assignedProEmailSent?: boolean;
  bookingInitMatch?: any;
  bookingSubState?: any;
  proPayment?: any;
  nullifyResult?: any;
  listPrice?: any;
  childSubState?: any;
  nextChildCreationAttempt?: any;
  mapHash?: any;
  formData?: any;
  textTasks?: any;
  arrivalDate?: any;
  uninitiatedPushSent?: any;
  couponDiscount?: any;
  coupon?: any;
  namespace?: any;
  bookingDomain?: any;
  token?: string;
  frameworkId?: any;
  domain?: string;
  selectedRecurrency?: any;
  seenProDate?: any;
  lastChildBooking?: any;
  calcPrice?: any;
  calcProPrice?: any;
  suppliesCost?: any;
  kilometers?: any;
  salesChannel?: any;
  bookingOnDemand?: boolean;
  quotationState?: number;
  tags?: Tag[];
  attachment?: any;
  caseId?: any;
  bookingAceptedAt?: any;
}

export interface Tag {
  tagId?: number;
  tag?: string;
  context?: string;
}

export interface TutenUserProfessional4 {
  weekAvailability?: string;
  hourAvailability?: string;
  serviceData?: string;
  referrers?: string;
  whyTuten?: string;
  tutenRoleList?: TutenUserProfessionalRole[];
  active?: number;
  tutenUser?: string;
  legallyElegibleToWork?: boolean;
  paidYearsExperience?: number;
  experience?: boolean;
  willingToBackgroundCheck?: boolean;
  declaredCommitedCrime?: boolean;
  referred?: any;
  workExperience?: string;
  shirtSize?: string;
  maxHoursPerWeek?: number;
  workPetsAround?: boolean;
  training?: string;
  applicationStep?: number;
  score?: number;
  applyDate?: number;
  birthdate?: number;
  transportation?: string;
  smartphone?: string;
  bankAccount?: boolean;
  referredBy?: string;
  apartmentNumber?: string;
  city?: string;
  country?: string;
  rut?: string;
  skills?: string;
  state?: string;
  streetAddress?: string;
  zipcode?: string;
  comments?: string;
  gender?: string;
  tutenUser1?: TutenUser14;
  bank?: string;
  bankCode?: string;
  bankAccountNumber?: string;
  bankAccountType?: string;
  hasTraining?: boolean;
  wonderlic?: number;
  workCommunes?: any;
  latitude?: number;
  longitude?: number;
  region?: any;
  locationW?: number;
  locationS?: number;
  materialsProvided?: any;
  lastLocation?: string;
  inactivityWarning?: boolean;
  inactivityWarningDate?: any;
  intermediary?: any;
  bankRut?: string;
  company?: any;
  companyRut?: any;
  companyPhone?: any;
  commercialBusiness?: any;
}

export interface TutenUser14 {
  serviceData?: any;
  userAvailability?: string;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: string;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: string;
  funds?: any;
  tokenFacebook?: string;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: string;
  estatus?: any;
}

export interface TutenUserProfessional3 {
  weekAvailability?: string;
  hourAvailability?: string;
  serviceData?: string;
  referrers?: string;
  whyTuten?: string;
  tutenRoleList?: TutenUserProfessionalRole[];
  active?: number;
  tutenUser?: string;
  legallyElegibleToWork?: boolean;
  paidYearsExperience?: number;
  experience?: boolean;
  willingToBackgroundCheck?: boolean;
  declaredCommitedCrime?: boolean;
  referred?: any;
  workExperience?: string;
  shirtSize?: string;
  maxHoursPerWeek?: number;
  workPetsAround?: boolean;
  training?: string;
  applicationStep?: number;
  score?: number;
  applyDate?: number;
  birthdate?: number;
  transportation?: string;
  smartphone?: string;
  bankAccount?: boolean;
  referredBy?: string;
  apartmentNumber?: string;
  city?: string;
  country?: string;
  rut?: string;
  skills?: string;
  state?: string;
  streetAddress?: string;
  zipcode?: string;
  comments?: string;
  gender?: string;
  tutenUser1?: TutenUser13;
  bank?: string;
  bankCode?: string;
  bankAccountNumber?: string;
  bankAccountType?: string;
  hasTraining?: boolean;
  wonderlic?: number;
  workCommunes?: any;
  latitude?: number;
  longitude?: number;
  region?: any;
  locationW?: number;
  locationS?: number;
  materialsProvided?: any;
  lastLocation?: string;
  inactivityWarning?: boolean;
  inactivityWarningDate?: any;
  intermediary?: any;
  bankRut?: any;
  company?: any;
  companyRut?: any;
  companyPhone?: any;
  commercialBusiness?: any;
}

export interface TutenUser13 {
  serviceData?: any;
  userAvailability?: string;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: string;
  lastLogin?: number;
  sessionTokenCli?: any;
  sessionTokenPro?: string;
  funds?: any;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: string;
  estatus?: any;
}

export interface TutenUserClient2 {
  serviceData?: any;
  userAvailability?: any;
  sessionTokenBck?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: any;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: any;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: string;
  funds?: number;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: any;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: any;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: string;
  estatus?: any;
}

export interface LocationId2 {
  streetAddress?: string;
  apartmentNumber?: string;
  country?: string;
  city?: string;
  state?: any;
  zipCode?: any;
  locationId?: number;
  commune?: string;
  region?: string;
  county?: any;
  active?: boolean;
  tutenUser?: TutenUser2;
  latitude?: number;
  longitude?: number;
}

export interface TutenUser2 {
  serviceData?: string;
  userAvailability?: any;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: any;
  sessionTokenWeb?: any;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: any;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: any;
  funds?: number;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: any;
  estatus?: any;
}

export interface TutenUserProfessional2 {
  weekAvailability?: string;
  hourAvailability?: string;
  serviceData?: string;
  referrers?: string;
  whyTuten?: string;
  tutenRoleList?: TutenUserProfessionalRole[];
  active?: number;
  tutenUser?: string;
  legallyElegibleToWork?: boolean;
  paidYearsExperience?: number;
  experience?: boolean;
  willingToBackgroundCheck?: boolean;
  declaredCommitedCrime?: boolean;
  referred?: any;
  workExperience?: string;
  shirtSize?: string;
  maxHoursPerWeek?: number;
  workPetsAround?: boolean;
  training?: string;
  applicationStep?: number;
  score?: number;
  applyDate?: number;
  birthdate?: number;
  transportation?: string;
  smartphone?: string;
  bankAccount?: boolean;
  referredBy?: string;
  apartmentNumber?: string;
  city?: string;
  country?: string;
  rut?: string;
  skills?: string;
  state?: string;
  streetAddress?: string;
  zipcode?: string;
  comments?: string;
  gender?: string;
  tutenUser1?: TutenUser12;
  bank?: string;
  bankCode?: string;
  bankAccountNumber?: string;
  bankAccountType?: string;
  hasTraining?: boolean;
  wonderlic?: any;
  workCommunes?: any;
  latitude?: any;
  longitude?: any;
  region?: string;
  locationW?: any;
  locationS?: any;
  materialsProvided?: any;
  lastLocation?: any;
  inactivityWarning?: boolean;
  inactivityWarningDate?: number;
  intermediary?: any;
  bankRut?: string;
  company?: any;
  companyRut?: any;
  companyPhone?: any;
  commercialBusiness?: any;
}

export interface TutenUser12 {
  serviceData?: any;
  userAvailability?: string;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: string;
  lastLogin?: number;
  sessionTokenCli?: any;
  sessionTokenPro?: string;
  funds?: any;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: any;
  estatus?: any;
}

export interface Recurrency {
  recurrencyId?: number;
  description?: string;
  discount?: number;
  holidays?: boolean;
  frecuencyPerWeek?: number;
  active?: boolean;
  sellerId?: any;
  repeatWeeklyMonday?: any;
  repeatWeeklyTuesday?: any;
  repeatWeeklyWednesday?: any;
  repeatWeeklyThursday?: any;
  repeatWeeklyFriday?: any;
}

export interface TutenUserClient {
  serviceData?: string;
  userAvailability?: any;
  sessionTokenBck?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: any;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: any;
  funds?: number;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: any;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: any;
  estatus?: any;
}

export interface PaymentId {
  paymentPaypalCardToken?: any;
  paymentName?: string;
  paymentType?: string;
  paymentState?: any;
  paymentId?: number;
  paymentData?: string;
  active?: boolean;
}

export interface LocationId {
  streetAddress?: string;
  apartmentNumber?: string;
  country?: string;
  city?: string;
  state?: any;
  zipCode?: any;
  locationId?: number;
  commune?: string;
  region?: string;
  county?: any;
  active?: boolean;
  tutenUser?: TutenUser;
  latitude?: number;
  longitude?: number;
}

export interface TutenUser {
  serviceData?: string;
  userAvailability?: any;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: any;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: any;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: any;
  funds?: number;
  tokenFacebook?: any;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: any;
  estatus?: any;
}

export interface TutenUserProfessional {
  weekAvailability?: string;
  hourAvailability?: string;
  serviceData?: string;
  referrers?: string;
  whyTuten?: string;
  tutenRoleList?: TutenUserProfessionalRole[];
  active?: number;
  tutenUser?: string;
  legallyElegibleToWork?: boolean;
  paidYearsExperience?: number;
  experience?: boolean;
  willingToBackgroundCheck?: boolean;
  declaredCommitedCrime?: boolean;
  referred?: any;
  workExperience?: string;
  shirtSize?: string;
  maxHoursPerWeek?: number;
  workPetsAround?: boolean;
  training?: string;
  applicationStep?: number;
  score?: number;
  applyDate?: number;
  birthdate?: number;
  transportation?: string;
  smartphone?: string;
  bankAccount?: boolean;
  referredBy?: string;
  apartmentNumber?: string;
  city?: string;
  country?: string;
  rut?: string;
  skills?: string;
  state?: string;
  streetAddress?: string;
  zipcode?: string;
  comments?: string;
  gender?: string;
  tutenUser1?: TutenUser1;
  bank?: string;
  bankCode?: string;
  bankAccountNumber?: string;
  bankAccountType?: string;
  hasTraining?: boolean;
  wonderlic?: number;
  workCommunes?: any;
  latitude?: number;
  longitude?: number;
  region?: any;
  locationW?: number;
  locationS?: number;
  materialsProvided?: any;
  lastLocation?: string;
  inactivityWarning?: boolean;
  inactivityWarningDate?: any;
  intermediary?: any;
  bankRut?: string;
  company?: any;
  companyRut?: any;
  companyPhone?: any;
  commercialBusiness?: any;
}

export interface TutenUser1 {
  serviceData?: any;
  userAvailability?: string;
  sessionTokenBck?: any;
  firstName?: string;
  lastName?: string;
  email?: string;
  active?: boolean;
  passwordHash?: string;
  sessionTokenWeb?: string;
  phoneNumber?: string;
  agreedToTermsOfUse?: boolean;
  whereKnownUs?: string;
  lastLogin?: number;
  sessionTokenCli?: string;
  sessionTokenPro?: string;
  funds?: any;
  tokenFacebook?: string;
  tokenGoogle?: any;
  tokensIonic?: string;
  photoPath?: any;
  photoExt?: any;
  userRole?: UserRole;
  sync?: number;
  usedCodeList?: string;
  referrer?: string;
  rut?: any;
  domain?: string;
  typeProfessional?: string;
  tutenSubRole?: any;
  userId?: number;
  appVersion?: string;
  estatus?: any;
}

export interface UserRole {
  userRole?: string;
  description?: string;
  fatherUserRole?: any;
  domain?: string;
  estatus?: any;
  defaultNamespace?: any;
  id?: number;
}

export interface TutenUserProfessionalRole {
  userRole?: string;
  description?: string;
  fatherUserRole?: string;
  domain?: string;
  estatus?: any;
  defaultNamespace?: any;
  id?: number;
}

export interface ListadoDatos {
  bookingId?: number;
  firstName?: string;
  lastName?: string;
  bookingTime?: number;
  streetAddress?: string;
  bookingPrice?: number;
}
 